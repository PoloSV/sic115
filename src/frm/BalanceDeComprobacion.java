package frm;

import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Chunk;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import db.Consulta;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import modelo.Cuenta;
import modelo.Balance;

/**
 *
 * @author Fatima
 */
public class BalanceDeComprobacion extends javax.swing.JInternalFrame {
    List<Cuenta> lista;
    /**
     * Creates new form BalanceDeComprobacion
     */
    public BalanceDeComprobacion(List<Cuenta> lista) {
        initComponents();
        this.lista = lista;
        iniciarDatos();
    }
    public BalanceDeComprobacion() {
        initComponents();
        
        //Balance b = new Balance();
        //b.extraerComprobacion();
        
        iniciarDatos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        tfDeudor = new javax.swing.JTextField();
        tfAcreedor = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("BALANCE DE COMPROBACIÓN");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Cuenta", "Deudor", "Acreedor"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel2.setText("Total");
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        tfDeudor.setEditable(false);

        tfAcreedor.setEditable(false);

        jButton2.setText("Guardar Como PDF");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(tfDeudor, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfAcreedor, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(98, 98, 98)
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 856, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfDeudor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfAcreedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            Document document = new Document();
            JFileChooser open = new JFileChooser();
            PdfPTable table = new PdfPTable(4);

            open.setFileFilter(new FileNameExtensionFilter("archivo pdf", "pdf"));
            open.showSaveDialog(this);

            PdfWriter.getInstance(document, new FileOutputStream(open.getSelectedFile() + ".pdf"));
            document.open();
            
            Paragraph p = new Paragraph("PROPLASTIC S.A. DE C.V.");
            p.setAlignment(Element.ALIGN_CENTER);
            document.add(p);
            p = new Paragraph("BALANCE DE COMPROBACIÓN");
            p.setAlignment(Element.ALIGN_CENTER);
            document.add(p);
            p = new Paragraph("DEL 30 DE NOVIEMBRE AL 4 DE DICIEMBRE DE 2017");
            p.setAlignment(Element.ALIGN_CENTER);
            document.add(p);
            document.add(Chunk.NEWLINE);

            addRows(table);
            //Codigo de la tabla 

            document.add(table);
            document.close();

        } catch (DocumentException ex) {
            Logger.getLogger(EstadoDeCapital.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(EstadoDeCapital.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BalanceDeComprobacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BalanceDeComprobacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BalanceDeComprobacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BalanceDeComprobacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BalanceDeComprobacion().setVisible(true);
            }
        });
    }
    private void addRows(PdfPTable table) {
        Font fontBold = FontFactory.getFont(FontFactory.HELVETICA, 12, Font.BOLD);
        Font fontItalic = FontFactory.getFont(FontFactory.HELVETICA, 12, Font.ITALIC);
        PdfPCell cell;
        //Crear el header
        cell = new PdfPCell(new Phrase("Codigo",fontBold));
        table.addCell(cell);
        cell = new PdfPCell(new Phrase("Nombre",fontBold));
        table.addCell(cell);
        cell = new PdfPCell(new Phrase("Deudor",fontBold));
        table.addCell(cell);
        cell = new PdfPCell(new Phrase("Acreedor",fontBold));
        table.addCell(cell);
        
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        for (int i = 0; i < modelo.getRowCount(); i++) {
            for (int j = 0; j < 4; j++) {
                String aux = String.valueOf(modelo.getValueAt(i, j));
                table.addCell(aux);
            }
        }
        
        cell = new PdfPCell(new Phrase("Total",fontItalic));
        cell.setColspan(2);
        table.addCell(cell);
        
        table.addCell(tfDeudor.getText());
        table.addCell(tfAcreedor.getText());
    }
    
    
    private void iniciarDatos(){
        double totHaber = 0;
        double totDebe = 0;
        
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        
        Consulta c = new Consulta();
        c.inicializar();
        
        List<Cuenta> cuentas = c.obtener("Cuenta");
        for(Cuenta x: cuentas){
            modelo.addRow(new Object[]{x.getCodigo(),x.getNombreCuenta(),x.getSumaDebe().doubleValue(), x.getSumaHaber().doubleValue()});
            totDebe += x.getSumaDebe().doubleValue();
            totHaber += x.getSumaHaber().doubleValue();
        }
        
        tfDeudor.setText(String.valueOf(totDebe));
        tfAcreedor.setText(String.valueOf(totHaber));
        
        c.cerrarConexion();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField tfAcreedor;
    private javax.swing.JTextField tfDeudor;
    // End of variables declaration//GEN-END:variables
}
