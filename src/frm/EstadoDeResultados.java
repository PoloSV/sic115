package frm;

import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Chunk;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import db.Consulta;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.math.BigDecimal;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import modelo.Cuenta;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Fatima
 */
public class EstadoDeResultados extends javax.swing.JInternalFrame {

    List<Cuenta> lista;

    /**
     * Creates new form EstadoDeResultados
     */
    public EstadoDeResultados(List<Cuenta> lista) {
        initComponents();
        this.lista = lista;
        inicializarFormulario();
    }

    private EstadoDeResultados() {
        initComponents();
        inicializarFormulario();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableIngresos = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableEgresos = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        tfTotalIngresos = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        tfTotalEgresos = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        tfUtilidad = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Estado de Resultados");

        jTableIngresos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Ingreso", "Monto"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableIngresos);

        jTableEgresos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Egresos", "Monto"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Long.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTableEgresos);

        jLabel2.setText("Total de Egresos");

        tfTotalIngresos.setEditable(false);

        jLabel3.setText("Total de Ingresos");

        tfTotalEgresos.setEditable(false);

        jLabel4.setText("Utilidad");

        tfUtilidad.setEditable(false);

        jButton1.setText("Guardar como PDF");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(146, 146, 146)
                        .addComponent(jLabel1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(14, 14, 14))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(19, 19, 19)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tfTotalIngresos, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)
                            .addComponent(tfTotalEgresos)
                            .addComponent(tfUtilidad)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 509, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfTotalIngresos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfTotalEgresos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfUtilidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            Document document = new Document();
            JFileChooser open = new JFileChooser();
            PdfPTable table = new PdfPTable(3);

            open.setFileFilter(new FileNameExtensionFilter("archivo pdf", "pdf"));
            open.showSaveDialog(this);

            PdfWriter.getInstance(document, new FileOutputStream(open.getSelectedFile() + ".pdf"));
            document.open();

            Paragraph p = new Paragraph("PROPLASTIC S.A. DE C.V.");
            p.setAlignment(Element.ALIGN_CENTER);
            document.add(p);
            p = new Paragraph("ESTADO DE RESULTADOS");
            p.setAlignment(Element.ALIGN_CENTER);
            document.add(p);
            p = new Paragraph("DEL ____ AL ____ DE 20___");
            p.setAlignment(Element.ALIGN_CENTER);
            document.add(p);
            document.add(Chunk.NEWLINE);

            addRows(table);
            //Codigo de la tabla 

            document.add(table);
            document.close();

        } catch (DocumentException ex) {
            Logger.getLogger(EstadoDeCapital.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(EstadoDeCapital.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EstadoDeResultados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EstadoDeResultados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EstadoDeResultados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EstadoDeResultados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EstadoDeResultados().setVisible(true);
            }
        });
    }

    private void addRows(PdfPTable table) {
        Font fontBold = FontFactory.getFont(FontFactory.HELVETICA, 12, Font.BOLD);
        Font fontItalic = FontFactory.getFont(FontFactory.HELVETICA, 12, Font.ITALIC);
        PdfPCell cell;
        //Crear el header
        cell = new PdfPCell(new Phrase("Ingresos", fontBold));
        cell.setColspan(3);
        table.addCell(cell);

        DefaultTableModel modelo = (DefaultTableModel) jTableIngresos.getModel();
        for (int i = 0; i < modelo.getRowCount(); i++) {

            cell = new PdfPCell(new Phrase(String.valueOf(modelo.getValueAt(i, 0))));
            cell.setColspan(2);
            table.addCell(cell);

            String aux = String.valueOf(modelo.getValueAt(i, 1));
            table.addCell(aux);

        }
        cell = new PdfPCell(new Phrase("Total Ingresos", fontItalic));
        cell.setColspan(2);
        table.addCell(cell);
        table.addCell(tfTotalIngresos.getText());

        cell = new PdfPCell(new Phrase("Egresos", fontBold));
        cell.setColspan(3);
        table.addCell(cell);

        modelo = (DefaultTableModel) jTableEgresos.getModel();
        for (int i = 0; i < modelo.getRowCount(); i++) {
            String aux = String.valueOf(modelo.getValueAt(i, 0));
            table.addCell(aux);

            cell = new PdfPCell(new Phrase(String.valueOf(modelo.getValueAt(i, 1))));
            cell.setColspan(2);
            table.addCell(cell);
        }
        cell = new PdfPCell(new Phrase("Total Egresos", fontItalic));
        cell.setColspan(2);
        table.addCell(cell);
        table.addCell(tfTotalEgresos.getText());

        cell = new PdfPCell(new Phrase("Utilidad", fontBold));
        cell.setColspan(2);
        table.addCell(cell);
        table.addCell(tfUtilidad.getText());

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableEgresos;
    private javax.swing.JTable jTableIngresos;
    private javax.swing.JTextField tfTotalEgresos;
    private javax.swing.JTextField tfTotalIngresos;
    private javax.swing.JTextField tfUtilidad;
    // End of variables declaration//GEN-END:variables

    public double inicializarFormulario() {
//        for(Cuenta c: lista){
//            if(c.getCuenta().getCodigo()==4){//Por ejemplo en el caso que sea 4
//                
//            }
//        }
        double totalIngresos = 0;
        DefaultTableModel modelo = (DefaultTableModel)jTableIngresos.getModel();
        Consulta c = new Consulta();
        c.inicializar();

        List<Cuenta> cuent = c.obtenerYFiltrar("Cuenta", "codigo LIKE '51_%' AND operable=true");
        for (Cuenta q : cuent) {
            modelo.addRow(new Object[]{q.getNombreCuenta(), q.getSumaHaber()});
            totalIngresos += q.getSumaHaber().doubleValue();
        }
        
        tfTotalIngresos.setText(String.valueOf(totalIngresos));

        c.cerrarConexion();
        
        
        double totalEgresos = 0;
        DefaultTableModel modeloEgresos = (DefaultTableModel) jTableEgresos.getModel();
        Consulta d = new Consulta();
        d.inicializar();
        cuent.clear();
        cuent = d.obtenerYFiltrar("Cuenta", "codigo LIKE '4%' AND operable=true AND codigo <> '416' AND codigo <> '4161' AND codigo <> '4162' AND codigo <> '4163'");
        for(Cuenta w: cuent){
            modeloEgresos.addRow(new Object[]{w.getNombreCuenta(), w.getSumaDebe()});
            totalEgresos += w.getSumaDebe().doubleValue();
        }
        
        d.cerrarConexion();
        tfTotalEgresos.setText(String.valueOf(totalEgresos));
        
        double utilidad = totalIngresos - totalEgresos;
        
        tfUtilidad.setText(String.valueOf(utilidad));
        
        
        Consulta x = new Consulta();
        x.inicializar();
        Cuenta yoyo = (Cuenta)x.getByID("Cuenta", "321");
        yoyo.setSumaHaber(BigDecimal.valueOf(utilidad));
        x.actualizar(yoyo);
        x.cerrarConexion();
        
        return utilidad;

    }
}
